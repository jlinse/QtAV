#Defining the paths here as well as .qmake.conf is needed so tests build.
win32 {
  CONFIG += no-openal  #Disable OpenAL for windows.  We have XAudio2 now.
  contains(QMAKE_TARGET.arch, x86_64) {
    LIBS += -L$$PWD/../../ffmpeg/win64/lib/
    INCLUDEPATH += $$PWD/../../ffmpeg/win64/include

    #LIBS += -L$$PWD/../../OpenAL/Windows/libs/Win64/
    #INCLUDEPATH += $$PWD/../../OpenAL/Windows/include
  } else {
    LIBS += -L$$PWD/../../ffmpeg/win32/lib/
    INCLUDEPATH += $$PWD/../../ffmpeg/win32/include

    #LIBS += -L$$PWD/../../OpenAL/Windows/libs/Win32/
    #INCLUDEPATH += $$PWD/../../OpenAL/Windows/include
  }
} else:mac {
  LIBS += -L$$PWD/../../ffmpeg/mac64/lib/
  INCLUDEPATH += $$PWD/../../ffmpeg/mac64/include

  #LIBS += -L$$PWD/../../OpenAL/Windows/libs/Win64/
  #INCLUDEPATH += $$PWD/../../OpenAL/Windows/include
} else:android {
  equals(ANDROID_TARGET_ARCH, armeabi-v7a) {
    LIBS += -L$$PWD/../../ffmpeg/android-armv7a/lib
    INCLUDEPATH += $$PWD/../../ffmpeg/android-armv7a/include
    message("ANDROID FFMPEG V7A");
    message($$LIBS);
  }
} else:unix {
  LIBS += -L$$PWD/../../ffmpeg/linux64/lib
  INCLUDEPATH += $$PWD/../../ffmpeg/linux64/include

  #use include path below if your using your system ffmpeg.
  #INCLUDEPATH += /usr/include/ffmpeg

  message("LINUX FFMPEG");
}


#CONFIG+=recheck
#CONFIG += no-examples
#CONFIG += no-tests
#CONFIG += no_config_tests

#CONFIG += config_avresample
#CONFIG += config_swresample
#CONFIG += done_config_swresample

message("*****************  USER.CONF LOADED **************" $$LIBS  INCLUDES=$$INCLUDEPATH);
